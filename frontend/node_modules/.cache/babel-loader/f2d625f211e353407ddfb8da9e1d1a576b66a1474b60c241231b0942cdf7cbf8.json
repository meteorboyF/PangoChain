{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\pangochain-prototype\\\\frontend\\\\src\\\\pages\\\\Cases.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Cases.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cases() {\n  _s();\n  const [tasks, setTasks] = useState({\n    todo: [\"Draft contract\", \"Collect client documents\"],\n    inProgress: [\"Review evidence\"],\n    done: [\"Initial consultation\"]\n  });\n  const moveTask = (task, from, to) => {\n    setTasks(prev => {\n      const updated = {\n        ...prev\n      };\n      updated[from] = updated[from].filter(t => t !== task);\n      updated[to] = [...updated[to], task];\n      return updated;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cases\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Case Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban\",\n      children: Object.keys(tasks).map(col => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kanban-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: col.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), tasks[col].map((task, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-card\",\n          children: [task, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-actions\",\n            children: [col !== \"todo\" && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => moveTask(task, col, \"todo\"),\n              children: \"\\u2B05 To Do\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 21\n            }, this), col !== \"inProgress\" && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => moveTask(task, col, \"inProgress\"),\n              children: \"\\u27A1 In Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 21\n            }, this), col !== \"done\" && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => moveTask(task, col, \"done\"),\n              children: \"\\u2705 Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this))]\n      }, col, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(Cases, \"0GRo+5jfacRZ5hZLpgACHGed04c=\");\n_c = Cases;\nexport default Cases;\nvar _c;\n$RefreshReg$(_c, \"Cases\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Cases","_s","tasks","setTasks","todo","inProgress","done","moveTask","task","from","to","prev","updated","filter","t","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","col","toUpperCase","i","onClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/pangochain-prototype/frontend/src/pages/Cases.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Cases.css\";\r\n\r\nfunction Cases() {\r\n  const [tasks, setTasks] = useState({\r\n    todo: [\"Draft contract\", \"Collect client documents\"],\r\n    inProgress: [\"Review evidence\"],\r\n    done: [\"Initial consultation\"]\r\n  });\r\n\r\n  const moveTask = (task, from, to) => {\r\n    setTasks((prev) => {\r\n      const updated = { ...prev };\r\n      updated[from] = updated[from].filter((t) => t !== task);\r\n      updated[to] = [...updated[to], task];\r\n      return updated;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"cases\">\r\n      <h2>Case Management</h2>\r\n      <div className=\"kanban\">\r\n        {Object.keys(tasks).map((col) => (\r\n          <div className=\"kanban-column\" key={col}>\r\n            <h3>{col.toUpperCase()}</h3>\r\n            {tasks[col].map((task, i) => (\r\n              <div key={i} className=\"task-card\">\r\n                {task}\r\n                <div className=\"task-actions\">\r\n                  {col !== \"todo\" && (\r\n                    <button onClick={() => moveTask(task, col, \"todo\")}>⬅ To Do</button>\r\n                  )}\r\n                  {col !== \"inProgress\" && (\r\n                    <button onClick={() => moveTask(task, col, \"inProgress\")}>➡ In Progress</button>\r\n                  )}\r\n                  {col !== \"done\" && (\r\n                    <button onClick={() => moveTask(task, col, \"done\")}>✅ Done</button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cases;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}