{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\pangochain-prototype\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    // Fetch tasks from the backend\n    axios.get('/api/cases').then(response => {\n      setTasks(response.data);\n    }).catch(error => console.log(error));\n  }, []);\n  const updateTaskStatus = (taskId, status) => {\n    // API call to update task status\n    axios.put(`/api/cases/${taskId}/status`, {\n      status\n    }).then(response => {\n      setTasks(tasks.map(task => task._id === taskId ? {\n        ...task,\n        status\n      } : task));\n    }).catch(error => console.log(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"To Do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), tasks.filter(task => task.status === 'To Do').map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateTaskStatus(task._id, 'In Progress'),\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, task._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"In Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), tasks.filter(task => task.status === 'In Progress').map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateTaskStatus(task._id, 'Done'),\n          children: \"Complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, task._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), tasks.filter(task => task.status === 'Done').map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-card\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, task._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Dashboard","_s","tasks","setTasks","get","then","response","data","catch","error","console","log","updateTaskStatus","taskId","status","put","map","task","_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","filter","title","onClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/pangochain-prototype/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Dashboard = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch tasks from the backend\r\n    axios.get('/api/cases')\r\n      .then(response => {\r\n        setTasks(response.data);\r\n      })\r\n      .catch(error => console.log(error));\r\n  }, []);\r\n\r\n  const updateTaskStatus = (taskId, status) => {\r\n    // API call to update task status\r\n    axios.put(`/api/cases/${taskId}/status`, { status })\r\n      .then(response => {\r\n        setTasks(tasks.map(task => task._id === taskId ? { ...task, status } : task));\r\n      })\r\n      .catch(error => console.log(error));\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <h2>Dashboard</h2>\r\n      <div className=\"task-column\">\r\n        <h3>To Do</h3>\r\n        {tasks.filter(task => task.status === 'To Do').map(task => (\r\n          <div key={task._id} className=\"task-card\">\r\n            <h4>{task.title}</h4>\r\n            <button onClick={() => updateTaskStatus(task._id, 'In Progress')}>Start</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"task-column\">\r\n        <h3>In Progress</h3>\r\n        {tasks.filter(task => task.status === 'In Progress').map(task => (\r\n          <div key={task._id} className=\"task-card\">\r\n            <h4>{task.title}</h4>\r\n            <button onClick={() => updateTaskStatus(task._id, 'Done')}>Complete</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"task-column\">\r\n        <h3>Done</h3>\r\n        {tasks.filter(task => task.status === 'Done').map(task => (\r\n          <div key={task._id} className=\"task-card\">\r\n            <h4>{task.title}</h4>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}