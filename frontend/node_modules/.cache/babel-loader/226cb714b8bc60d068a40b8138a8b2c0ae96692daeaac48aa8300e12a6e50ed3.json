{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\pangochain-prototype\\\\frontend\\\\src\\\\pages\\\\Cases.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Cases.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cases() {\n  _s();\n  const [tasks, setTasks] = useState({\n    todo: [{\n      id: 1,\n      title: \"Draft Contract\",\n      description: \"Prepare draft\"\n    }, {\n      id: 2,\n      title: \"Collect Documents\",\n      description: \"Gather evidence\"\n    }],\n    inProgress: [{\n      id: 3,\n      title: \"Review Evidence\",\n      description: \"Check docs\"\n    }],\n    done: [{\n      id: 4,\n      title: \"Client Meeting\",\n      description: \"Initial discussion\"\n    }]\n  });\n  const onDragStart = (e, task, column) => {\n    e.dataTransfer.setData(\"task\", JSON.stringify({\n      task,\n      column\n    }));\n  };\n  const onDrop = (e, newColumn) => {\n    const {\n      task,\n      column\n    } = JSON.parse(e.dataTransfer.getData(\"task\"));\n    if (column !== newColumn) {\n      setTasks(prev => {\n        const updated = {\n          ...prev\n        };\n        updated[column] = prev[column].filter(t => t.id !== task.id);\n        updated[newColumn] = [...prev[newColumn], task];\n        return updated;\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cases\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Case Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban-board\",\n      children: [\"todo\", \"inProgress\", \"done\"].map(col => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kanban-column\",\n        onDragOver: e => e.preventDefault(),\n        onDrop: e => onDrop(e, col),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: col === \"todo\" ? \"To Do\" : col === \"inProgress\" ? \"In Progress\" : \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), tasks[col].map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-card\",\n          draggable: true,\n          onDragStart: e => onDragStart(e, task, col),\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this))]\n      }, col, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Cases, \"sRT3eVJZwfV6x+lZ1L3CDfufeFQ=\");\n_c = Cases;\nexport default Cases;\nvar _c;\n$RefreshReg$(_c, \"Cases\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Cases","_s","tasks","setTasks","todo","id","title","description","inProgress","done","onDragStart","e","task","column","dataTransfer","setData","JSON","stringify","onDrop","newColumn","parse","getData","prev","updated","filter","t","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","col","onDragOver","preventDefault","draggable","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/pangochain-prototype/frontend/src/pages/Cases.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Cases.css\";\r\n\r\nfunction Cases() {\r\n  const [tasks, setTasks] = useState({\r\n    todo: [\r\n      { id: 1, title: \"Draft Contract\", description: \"Prepare draft\" },\r\n      { id: 2, title: \"Collect Documents\", description: \"Gather evidence\" },\r\n    ],\r\n    inProgress: [{ id: 3, title: \"Review Evidence\", description: \"Check docs\" }],\r\n    done: [{ id: 4, title: \"Client Meeting\", description: \"Initial discussion\" }],\r\n  });\r\n\r\n  const onDragStart = (e, task, column) => {\r\n    e.dataTransfer.setData(\"task\", JSON.stringify({ task, column }));\r\n  };\r\n\r\n  const onDrop = (e, newColumn) => {\r\n    const { task, column } = JSON.parse(e.dataTransfer.getData(\"task\"));\r\n    if (column !== newColumn) {\r\n      setTasks((prev) => {\r\n        const updated = { ...prev };\r\n        updated[column] = prev[column].filter((t) => t.id !== task.id);\r\n        updated[newColumn] = [...prev[newColumn], task];\r\n        return updated;\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"cases\">\r\n      <h2>Case Management</h2>\r\n      <div className=\"kanban-board\">\r\n        {[\"todo\", \"inProgress\", \"done\"].map((col) => (\r\n          <div\r\n            key={col}\r\n            className=\"kanban-column\"\r\n            onDragOver={(e) => e.preventDefault()}\r\n            onDrop={(e) => onDrop(e, col)}\r\n          >\r\n            <h3>{col === \"todo\" ? \"To Do\" : col === \"inProgress\" ? \"In Progress\" : \"Done\"}</h3>\r\n            {tasks[col].map((task) => (\r\n              <div\r\n                key={task.id}\r\n                className=\"task-card\"\r\n                draggable\r\n                onDragStart={(e) => onDragStart(e, task, col)}\r\n              >\r\n                <h4>{task.title}</h4>\r\n                <p>{task.description}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cases;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC;IACjCO,IAAI,EAAE,CACJ;MAAEC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,gBAAgB;MAAEC,WAAW,EAAE;IAAgB,CAAC,EAChE;MAAEF,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,mBAAmB;MAAEC,WAAW,EAAE;IAAkB,CAAC,CACtE;IACDC,UAAU,EAAE,CAAC;MAAEH,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,iBAAiB;MAAEC,WAAW,EAAE;IAAa,CAAC,CAAC;IAC5EE,IAAI,EAAE,CAAC;MAAEJ,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,gBAAgB;MAAEC,WAAW,EAAE;IAAqB,CAAC;EAC9E,CAAC,CAAC;EAEF,MAAMG,WAAW,GAAGA,CAACC,CAAC,EAAEC,IAAI,EAAEC,MAAM,KAAK;IACvCF,CAAC,CAACG,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEL,IAAI;MAAEC;IAAO,CAAC,CAAC,CAAC;EAClE,CAAC;EAED,MAAMK,MAAM,GAAGA,CAACP,CAAC,EAAEQ,SAAS,KAAK;IAC/B,MAAM;MAAEP,IAAI;MAAEC;IAAO,CAAC,GAAGG,IAAI,CAACI,KAAK,CAACT,CAAC,CAACG,YAAY,CAACO,OAAO,CAAC,MAAM,CAAC,CAAC;IACnE,IAAIR,MAAM,KAAKM,SAAS,EAAE;MACxBhB,QAAQ,CAAEmB,IAAI,IAAK;QACjB,MAAMC,OAAO,GAAG;UAAE,GAAGD;QAAK,CAAC;QAC3BC,OAAO,CAACV,MAAM,CAAC,GAAGS,IAAI,CAACT,MAAM,CAAC,CAACW,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACpB,EAAE,KAAKO,IAAI,CAACP,EAAE,CAAC;QAC9DkB,OAAO,CAACJ,SAAS,CAAC,GAAG,CAAC,GAAGG,IAAI,CAACH,SAAS,CAAC,EAAEP,IAAI,CAAC;QAC/C,OAAOW,OAAO;MAChB,CAAC,CAAC;IACJ;EACF,CAAC;EAED,oBACExB,OAAA;IAAK2B,SAAS,EAAC,OAAO;IAAAC,QAAA,gBACpB5B,OAAA;MAAA4B,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBhC,OAAA;MAAK2B,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1B,CAAC,MAAM,EAAE,YAAY,EAAE,MAAM,CAAC,CAACK,GAAG,CAAEC,GAAG,iBACtClC,OAAA;QAEE2B,SAAS,EAAC,eAAe;QACzBQ,UAAU,EAAGvB,CAAC,IAAKA,CAAC,CAACwB,cAAc,CAAC,CAAE;QACtCjB,MAAM,EAAGP,CAAC,IAAKO,MAAM,CAACP,CAAC,EAAEsB,GAAG,CAAE;QAAAN,QAAA,gBAE9B5B,OAAA;UAAA4B,QAAA,EAAKM,GAAG,KAAK,MAAM,GAAG,OAAO,GAAGA,GAAG,KAAK,YAAY,GAAG,aAAa,GAAG;QAAM;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EAClF7B,KAAK,CAAC+B,GAAG,CAAC,CAACD,GAAG,CAAEpB,IAAI,iBACnBb,OAAA;UAEE2B,SAAS,EAAC,WAAW;UACrBU,SAAS;UACT1B,WAAW,EAAGC,CAAC,IAAKD,WAAW,CAACC,CAAC,EAAEC,IAAI,EAAEqB,GAAG,CAAE;UAAAN,QAAA,gBAE9C5B,OAAA;YAAA4B,QAAA,EAAKf,IAAI,CAACN;UAAK;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrBhC,OAAA;YAAA4B,QAAA,EAAIf,IAAI,CAACL;UAAW;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GANpBnB,IAAI,CAACP,EAAE;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOT,CACN,CAAC;MAAA,GAhBGE,GAAG;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAiBL,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC9B,EAAA,CAtDQD,KAAK;AAAAqC,EAAA,GAALrC,KAAK;AAwDd,eAAeA,KAAK;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}