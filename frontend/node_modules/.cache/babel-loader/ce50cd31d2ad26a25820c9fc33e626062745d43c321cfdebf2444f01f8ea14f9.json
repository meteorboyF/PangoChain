{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\pangochain-prototype\\\\frontend\\\\src\\\\pages\\\\Documents.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport api from '../api/api';\nimport './Documents.css'; // We'll update this file next\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Documents = () => {\n  _s();\n  const [documents, setDocuments] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [storageType, setStorageType] = useState('MongoDB'); // Default storage type\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  // For this prototype, we'll hardcode a caseId.\n  // In a real app, you would get this from the URL or state management.\n  const caseId = 'YOUR_TEST_CASE_ID'; // IMPORTANT: REPLACE THIS with a real case ID from your database\n\n  const {\n    user\n  } = useContext(AuthContext);\n\n  // Function to fetch documents for the case\n  const fetchDocuments = async () => {\n    if (!caseId) return;\n    try {\n      setLoading(true);\n      const response = await api.get(`/documents/${caseId}`);\n      setDocuments(response.data);\n    } catch (err) {\n      setError('Failed to fetch documents.');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch documents when the component mounts\n  useEffect(() => {\n    fetchDocuments();\n  }, [caseId]); // Re-run if caseId changes\n\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n  const handleUpload = async e => {\n    e.preventDefault();\n    if (!selectedFile) {\n      setError('Please select a file to upload.');\n      return;\n    }\n    if (!user) {\n      setError('You must be logged in to upload.');\n      return;\n    }\n\n    // FormData is necessary for sending files\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    formData.append('storageType', storageType);\n    // The 'uploader' is handled by the backend using our authMiddleware\n\n    setError('');\n    setLoading(true);\n    try {\n      const response = await api.post(`/documents/${caseId}/upload`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      // Add the new document to our state to instantly update the UI\n      setDocuments(prevDocs => [...prevDocs, response.data.document]);\n      setSelectedFile(null); // Clear the file input\n      document.getElementById('file-input').value = ''; // A trick to clear the file input visually\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'File upload failed.');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"documents-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"page-title\",\n      children: \"Case Documents\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Upload New Document\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUpload,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"file-input\",\n          type: \"file\",\n          onChange: handleFileChange,\n          className: \"file-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"storage-options\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: \"MongoDB\",\n              checked: storageType === 'MongoDB',\n              onChange: e => setStorageType(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), \"Standard (MongoDB)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: \"Blockchain\",\n              checked: storageType === 'Blockchain',\n              onChange: e => setStorageType(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), \"Secure Vault (Blockchain)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading || !selectedFile,\n          children: loading ? 'Uploading...' : 'Upload File'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"document-list\",\n      children: [documents.length === 0 && !loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No documents found for this case.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 48\n      }, this), documents.map(doc => {\n        var _doc$uploader;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `doc-card ${doc.storageType === 'Blockchain' ? 'vault' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"doc-filename\",\n            children: doc.originalName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Type: \", doc.contentType]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Uploader: \", ((_doc$uploader = doc.uploader) === null || _doc$uploader === void 0 ? void 0 : _doc$uploader.name) || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Uploaded: \", new Date(doc.uploadedAt).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), doc.storageType === 'Blockchain' && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"vault-badge\",\n            children: \"Vault Protected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 50\n          }, this)]\n        }, doc._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(Documents, \"Hx8YjvMpdQtFti3/4lwv7MWIa2g=\");\n_c = Documents;\nexport default Documents;\nvar _c;\n$RefreshReg$(_c, \"Documents\");","map":{"version":3,"names":["React","useState","useEffect","useContext","AuthContext","api","jsxDEV","_jsxDEV","Documents","_s","documents","setDocuments","selectedFile","setSelectedFile","storageType","setStorageType","error","setError","loading","setLoading","caseId","user","fetchDocuments","response","get","data","err","console","handleFileChange","e","target","files","handleUpload","preventDefault","formData","FormData","append","post","headers","prevDocs","document","getElementById","value","_err$response","_err$response$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","id","type","onChange","checked","disabled","length","map","doc","_doc$uploader","originalName","contentType","uploader","name","Date","uploadedAt","toLocaleString","_id","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/pangochain-prototype/frontend/src/pages/Documents.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport api from '../api/api';\r\nimport './Documents.css'; // We'll update this file next\r\n\r\nconst Documents = () => {\r\n  const [documents, setDocuments] = useState([]);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [storageType, setStorageType] = useState('MongoDB'); // Default storage type\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  \r\n  // For this prototype, we'll hardcode a caseId.\r\n  // In a real app, you would get this from the URL or state management.\r\n  const caseId = 'YOUR_TEST_CASE_ID'; // IMPORTANT: REPLACE THIS with a real case ID from your database\r\n\r\n  const { user } = useContext(AuthContext);\r\n\r\n  // Function to fetch documents for the case\r\n  const fetchDocuments = async () => {\r\n    if (!caseId) return;\r\n    try {\r\n      setLoading(true);\r\n      const response = await api.get(`/documents/${caseId}`);\r\n      setDocuments(response.data);\r\n    } catch (err) {\r\n      setError('Failed to fetch documents.');\r\n      console.error(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch documents when the component mounts\r\n  useEffect(() => {\r\n    fetchDocuments();\r\n  }, [caseId]); // Re-run if caseId changes\r\n\r\n  const handleFileChange = (e) => {\r\n    setSelectedFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async (e) => {\r\n    e.preventDefault();\r\n    if (!selectedFile) {\r\n      setError('Please select a file to upload.');\r\n      return;\r\n    }\r\n    if (!user) {\r\n        setError('You must be logged in to upload.');\r\n        return;\r\n    }\r\n\r\n    // FormData is necessary for sending files\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n    formData.append('storageType', storageType);\r\n    // The 'uploader' is handled by the backend using our authMiddleware\r\n\r\n    setError('');\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await api.post(`/documents/${caseId}/upload`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      // Add the new document to our state to instantly update the UI\r\n      setDocuments(prevDocs => [...prevDocs, response.data.document]);\r\n      setSelectedFile(null); // Clear the file input\r\n      document.getElementById('file-input').value = ''; // A trick to clear the file input visually\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || 'File upload failed.');\r\n      console.error(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"documents-page\">\r\n      <h2 className=\"page-title\">Case Documents</h2>\r\n      \r\n      {/* Upload Form */}\r\n      <div className=\"upload-container\">\r\n        <h3>Upload New Document</h3>\r\n        <form onSubmit={handleUpload}>\r\n          <input id=\"file-input\" type=\"file\" onChange={handleFileChange} className=\"file-input\" />\r\n          \r\n          <div className=\"storage-options\">\r\n            <label>\r\n              <input \r\n                type=\"radio\" \r\n                value=\"MongoDB\" \r\n                checked={storageType === 'MongoDB'} \r\n                onChange={(e) => setStorageType(e.target.value)} \r\n              />\r\n              Standard (MongoDB)\r\n            </label>\r\n            <label>\r\n              <input \r\n                type=\"radio\" \r\n                value=\"Blockchain\" \r\n                checked={storageType === 'Blockchain'} \r\n                onChange={(e) => setStorageType(e.target.value)} \r\n              />\r\n              Secure Vault (Blockchain)\r\n            </label>\r\n          </div>\r\n          \r\n          <button type=\"submit\" disabled={loading || !selectedFile}>\r\n            {loading ? 'Uploading...' : 'Upload File'}\r\n          </button>\r\n        </form>\r\n        {error && <p className=\"error-message\">{error}</p>}\r\n      </div>\r\n\r\n      {/* Document List */}\r\n      <div className=\"document-list\">\r\n        {documents.length === 0 && !loading && <p>No documents found for this case.</p>}\r\n        {documents.map((doc) => (\r\n          <div key={doc._id} className={`doc-card ${doc.storageType === 'Blockchain' ? 'vault' : ''}`}>\r\n            <h4 className=\"doc-filename\">{doc.originalName}</h4>\r\n            <p>Type: {doc.contentType}</p>\r\n            <p>Uploader: {doc.uploader?.name || 'N/A'}</p>\r\n            <p>Uploaded: {new Date(doc.uploadedAt).toLocaleString()}</p>\r\n            {doc.storageType === 'Blockchain' && <span className=\"vault-badge\">Vault Protected</span>}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Documents;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}